# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  powerManagement.cpuFreqGovernor = "performance";

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/f04329c0-e942-40fe-95b5-171396de2cac";
    fsType = "xfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/0CDE-55E5";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/run/media/stschiff/D" = {
    device = "/dev/disk/by-uuid/C4CA75E0CA75CEE4";
    fsType = "ntfs-3g";
    options = ["rw" "uid=1000" "nofail"];
  };

  fileSystems."/run/media/stschiff/E" = {
    device = "/dev/disk/by-uuid/59cbd08f-78ed-4ab8-b9db-6d9e18a32a4e";
    fsType = "xfs";
    options = ["nofail"];
  };

  fileSystems."/run/media/stschiff/F Alt-Alt-C" = {
    device = "/dev/disk/by-uuid/366275AC6275720B";
    fsType = "ntfs-3g";
    options = ["rw" "uid=1000" "nofail"];
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/67dd1211-5950-4526-8c03-0c2f1e73f647";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  # hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.cpu.amd.updateMicrocode = true;
}
